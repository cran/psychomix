
R version 2.13.1 (2011-07-08)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("psychomix")
Loading required package: Formula
Loading required package: flexmix
Loading required package: lattice
Loading required package: modeltools
Loading required package: stats4
Loading required package: multcomp
Loading required package: mvtnorm
Loading required package: survival
Loading required package: splines
Loading required package: psychotools
> set.seed(1)
> 
> ### Rost
> r <- simRaschmix(design = "rost2", extreme = FALSE)
> re <- simRaschmix(design = "rost2", extreme = TRUE)
> 
> mr <- raschmix(r, k = 2, nrep = 1, scores = "saturated")
2 : *
> mrs <- raschmix(r, k = 1:2, nrep = 1, scores = "saturated")
1 : *
2 : *
> mre <- raschmix(data = re, k = 2, nrep = 1, scores = "saturated")
2 : *
> mres <- raschmix(data = re, k = 1:3, nrep = 1, scores = "saturated")
1 : *
2 : *
3 : *
> 
> mr

Call:
raschmix(formula = r, k = 2, scores = "saturated", nrep = 1)

Cluster sizes:
  1   2 
820 808 

convergence after 8 iterations
> mrs

Call:
raschmix(formula = r, k = 1:2, scores = "saturated", nrep = 1)

  iter converged k k0     logLik      AIC      BIC      ICL
1    2      TRUE 1  1 -10409.177 20852.35 20944.07 20944.07
2    9      TRUE 2  2  -8738.606 17547.21 17736.04 17809.92
> mre

Call:
raschmix(data = re, k = 2, scores = "saturated", nrep = 1)

Cluster sizes:
  1   2 
811 823 

convergence after 8 iterations
> mres

Call:
raschmix(data = re, k = 1:3, scores = "saturated", nrep = 1)

  iter converged k k0     logLik      AIC      BIC      ICL
1    2      TRUE 1  1 -11058.702 22155.40 22257.98 21238.93
2    8      TRUE 2  2  -9344.533 18763.07 18962.82 18006.88
3   66      TRUE 3  3  -9328.625 18767.25 19064.18 18552.11
> 
> parameters(mr)
                 Comp.1      Comp.2
item.Item02 -0.29645859  0.37325673
item.Item03 -0.81547197  1.10548855
item.Item04 -1.52833354  1.55395860
item.Item05 -2.18609423  2.19435334
item.Item06 -2.84028046  2.86595034
item.Item07 -3.30964639  3.44127350
item.Item08 -3.94307287  4.06326240
item.Item09 -4.54499274  4.67727579
item.Item10 -5.06950851  5.30746318
score.2      0.05934189  0.19060581
score.3      0.05992926  0.10051070
score.4     -0.14056303 -0.10498271
score.5     -0.13731611 -0.17466282
score.6     -0.17039857  0.08536118
score.7      0.09554081  0.18410844
score.8     -0.02019733 -0.04855460
score.9     -0.11509591  0.03650649
> 
> ## ### DIFSim
> ## data("DIFSim", package = "psychotree")
> ## #data("DIFSim", package = "psychotools")
> ## DIFSim.na <- DIFSim
> ## DIFSim.na$resp[1,1] <- NA
> ## DIFSim.na$resp[2,] <- NA
> ## DIFSim.na$age[3] <- NA
> ## #m2 <- raschmix(DIFSim$resp, k = 2, nrep = 1, type = "rost")
> ## m1 <- raschmix(DIFSim$resp, k = 2, nrep = 1, scores = "saturated",
> ##                control = list(iter.max = 20))
> ## m2 <- raschmix(resp ~ 1, DIFSim.na, k = 1, nrep = 1, scores = "saturated")
> ## ## concomitant
> ## m3 <- raschmix(resp ~ age + gender, data = DIFSim, k = 2, nrep = 1,
> ##                scores = "saturated")
> ## m3mv <- raschmix(resp ~ age + gender, data = DIFSim, k = 2, nrep = 1,
> ##                scores = "meanvar")
> ## #m4 <- raschmix(resp ~ age + gender, data = DIFSim[-(1:10),], k = 2:3, nrep = 1,
> ## #               scores = "saturated")
> 
> ## ## print and summary
> ## m3
> ## summary(m3)
> ## ## m4
> ## ## m4.1 <- getModel(m4, which = 1)
> ## ## m4.1
> ## ## summary(m4.1)
> 
> ## ## logLik
> ## logLik(m3)
> 
> ## ## parameters
> ## parameters(m3, which = "concomitant", component = 2:1)
> ## parameters(m3, which = "score")
> ## score.probs(m3mv)
> 
> ## ## weights
> ## ## weights(m3)
> ## ## ## flexmix requires integer weights
> ## ## w <- sample(1:nrow(DIFSim), nrow(DIFSim))
> ## ## m3w <- raschmix(resp ~ age + gender, data = DIFSim, k = 2, nrep = 1,
> ## ##                scores = "saturated", weights = w)
> ## ## weights(m3w)
> 
> ## ## refit
> 
> ## ## plot
> ## ## plot(m3)
> ## ## histogram(m3)
> ## ## m.nident <- raschmix(data = cbind(0,DIFSim$resp[,1:5],1,1,DIFSim$resp[,-(1:5)]),
> ## ##                      scores = "saturated", k = 3, nrep = 1)
> ## ## plot(m.nident)
> ## ## plot(m.nident, pch = 19:21, cex = matrix(rep((1+1:23)/10, 3), ncol = 3))
> ## ## plot(m.nident, index = FALSE, component = 1:2)
> ## ## plot(m.nident, index = TRUE, component = 1:2)
> 
> 
