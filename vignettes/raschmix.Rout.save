
> options(width = 70, prompt = "R> ", continue = "+  ")

> library("psychomix")
Loading required package: flexmix
Loading required package: lattice
Loading required package: psychotools

> data("VerbalAggression", package = "psychotools")

> set.seed(1090)

> cache <- FALSE

> set.seed(1)

> r2 <- simRaschmix(design = "rost2")

> d <- data.frame(x1 = rbinom(nrow(r2), prob = c(0.4, 
+     0.6)[attr(r2, "cluster")], size = 1), x2 = rnorm(nrow(r2)))

> d$resp <- r2

> if (cache & file.exists("m1.rda")) {
+     load("m1.rda")
+ } else {
+     set.seed(2)
+     m1 <- raschmix(r2, k = 1:3)
+     m1
+     if (cache) { .... [TRUNCATED] 
1 : * * *
2 : * * *
3 : * * *

> m1

Call:
raschmix(formula = r2, k = 1:3)

  iter converged k k0     logLik      AIC      BIC      ICL
1    2      TRUE 1  1 -10484.227 21002.45 21094.39 21094.39
2    9      TRUE 2  2  -8829.038 17728.08 17917.35 17987.30
3   67      TRUE 3  3  -8817.848 17741.70 18028.32 18307.13

> plot(m1)

> BIC(m1)
       1        2        3 
21094.39 17917.35 18028.32 

> m1b <- getModel(m1, which = "BIC")

> summary(m1b)

Call:
raschmix(formula = r2, k = 2)

       prior size post>0 ratio
Comp.1   0.5  819   1285 0.637
Comp.2   0.5  830   1301 0.638

Item Parameters:
           Comp.1     Comp.2
Item01 -2.5461200  2.6278031
Item02 -2.1053835  2.1250746
Item03 -1.6716294  1.3812228
Item04 -1.0293901  0.8535203
Item05 -0.2233486  0.3129260
Item06  0.2737782 -0.2937386
Item07  0.9561390 -0.8701059
Item08  1.5512468 -1.4464421
Item09  2.0670820 -2.0540182
Item10  2.7276257 -2.6362421

'log Lik.' -8829.038 (df=35)
AIC: 17728.08   BIC: 17917.35 


> parameters(m1b, "item")
               Comp.1     Comp.2
item.Item01        NA         NA
item.Item02 0.4407365 -0.5027285
item.Item03 0.8744906 -1.2465803
item.Item04 1.5167298 -1.7742828
item.Item05 2.3227714 -2.3148771
item.Item06 2.8198982 -2.9215417
item.Item07 3.5022589 -3.4979090
item.Item08 4.0973667 -4.0742453
item.Item09 4.6132020 -4.6818213
item.Item10 5.2737457 -5.2640452

> worth(m1b)
           Comp.1     Comp.2
Item01 -2.5461200  2.6278031
Item02 -2.1053835  2.1250746
Item03 -1.6716294  1.3812228
Item04 -1.0293901  0.8535203
Item05 -0.2233486  0.3129260
Item06  0.2737782 -0.2937386
Item07  0.9561390 -0.8701059
Item08  1.5512468 -1.4464421
Item09  2.0670820 -2.0540182
Item10  2.7276257 -2.6362421

> attr(r2, "difficulty")
      [,1] [,2]
 [1,]  2.7 -2.7
 [2,]  2.1 -2.1
 [3,]  1.5 -1.5
 [4,]  0.9 -0.9
 [5,]  0.3 -0.3
 [6,] -0.3  0.3
 [7,] -0.9  0.9
 [8,] -1.5  1.5
 [9,] -2.1  2.1
[10,] -2.7  2.7

> table(model = clusters(m1b), true = attr(r2, "cluster"))
     true
model   1   2
    1  14 805
    2 812  18

> if (cache & file.exists("m2.rda")) {
+     load("m2.rda")
+ } else {
+     set.seed(3)
+     m2 <- raschmix(data = r2, k = 1:3, scores = "meanvar")
 .... [TRUNCATED] 
1 : * * *
2 : * * *
3 : * * *

> m2

Call:
raschmix(data = r2, k = 1:3, scores = "meanvar")

  iter converged k k0     logLik      AIC      BIC      ICL
1    2      TRUE 1  1 -10486.816 20995.63 21055.12 21055.12
2    8      TRUE 2  2  -8834.887 17715.77 17840.16 17910.21
3  121      TRUE 3  3  -8827.652 17725.30 17914.58 18352.78

> m2b <- getModel(m2, which = "BIC")

> par(mfrow = c(1, 2))

> plot(m1b, pos = "top")

> for (i in 1:2) lines(attr(r2, "difficulty")[, i], 
+     lty = 2, type = "b")

> plot(m2b, pos = "top")

> for (i in 1:2) lines(attr(r2, "difficulty")[, i], 
+     lty = 2, type = "b")

> logLik(m2b)
'log Lik.' -8834.887 (df=23)

> logLik(m1b)
'log Lik.' -8829.038 (df=35)

> parameters(m2b, which = "score")
                     Comp.1     Comp.2
score.location    0.1662452  0.1001153
score.dispersion -0.1679713 -0.2514496

> scoreProbs(m2b)
         Comp.1    Comp.2
 [1,] 0.0000000 0.0000000
 [2,] 0.1104995 0.1170100
 [3,] 0.1071901 0.1101524
 [4,] 0.1053864 0.1058038
 [5,] 0.1050149 0.1036919
 [6,] 0.1060603 0.1036871
 [7,] 0.1085652 0.1057891
 [8,] 0.1126327 0.1101268
 [9,] 0.1184334 0.1169719
[10,] 0.1262176 0.1267671
[11,] 0.0000000 0.0000000

> if (cache & file.exists("cm2.rda")) {
+     load("cm2.rda")
+ } else {
+     set.seed(4)
+     cm2 <- raschmix(resp ~ x1 + x2, data = d, k = 1:3, sc .... [TRUNCATED] 
1 : * * *
2 : * * *
3 : * * *

> rbind(m2 = BIC(m2), cm2 = BIC(cm2))
           1        2        3
m2  21055.12 17840.16 17914.58
cm2 21055.12 17776.30 17867.25

> cm2b <- getModel(cm2, which = "BIC")

> tStat <- 2 * (logLik(cm2b) - logLik(m2b))

> pValue <- pchisq(tStat, attr(logLik(cm2b), "df") - 
+     attr(logLik(m2b), "df"), lower.tail = FALSE)

> if (pValue < 0.001) pValue <- "< 0.001"

> cm2b <- getModel(cm2, which = "BIC")

> parameters(cm2b, which = "concomitant")
            1           2
(Intercept) 0  0.45759154
x1          0 -0.91231698
x2          0  0.02909326

> table(x1 = d$x1, clusters = clusters(cm2b))
   clusters
x1    1   2
  0 318 501
  1 505 325

> data("VerbalAggression", package = "psychotools")

> VerbalAggression$resp2 <- VerbalAggression$resp2[, 
+     1:12]

> va12 <- subset(VerbalAggression, rowSums(resp2) > 
+     0 & rowSums(resp2) < 12)

> colnames(va12$resp2)
 [1] "S1WantCurse" "S1DoCurse"   "S1WantScold" "S1DoScold"  
 [5] "S1WantShout" "S1DoShout"   "S2WantCurse" "S2DoCurse"  
 [9] "S2WantScold" "S2DoScold"   "S2WantShout" "S2DoShout"  

> if (cache & file.exists("va12_mix.rda")) {
+     load("va12_mix.rda")
+ } else {
+     set.seed(1)
+     va12_mix1 <- raschmix(resp2 ~ 1, data = va1 .... [TRUNCATED] 
1 : * * *
2 : * * *
3 : * * *
4 : * * *
1 : * * *
2 : * * *
3 : * * *
4 : * * *

> rbind(BIC(va12_mix1), BIC(va12_mix2))
            1        2        3        4
[1,] 3874.632 3857.549 3854.353 3889.432
[2,] 3874.632 3859.120 3854.823 3881.705

> va12_mix3 <- getModel(va12_mix2, which = "3")

> va12_mix1b <- getModel(va12_mix1, which = "3")

> va12_mix2b <- getModel(va12_mix2, which = "3")

> tStatVA <- 2 * (logLik(va12_mix2b) - logLik(va12_mix1b))

> pValueVA <- pchisq(tStatVA, attr(logLik(va12_mix2b), 
+     "df") - attr(logLik(va12_mix1b), "df"), lower.tail = FALSE)

> if (pValueVA < 0.001) pValueVA <- "< 0.001"

> trellis.par.set(theme = standard.theme(color = FALSE))

> print(histogram(va12_mix3))

> trellis.par.set(theme = standard.theme(color = FALSE))

> print(xyplot(va12_mix3))

> parameters(getModel(va12_mix2, which = "3"), which = "concomitant")
            1          2           3
(Intercept) 0 -2.9113698  0.76066767
gendermale  0 -0.2473712 -1.66472846
anger       0  0.1152369 -0.01154008

> if (cache & file.exists("fcm2.rda")) {
+     load("fcm2.rda")
+ } else {
+     set.seed(4)
+     fcm2 <- stepFlexmix(resp ~ 1, data = d, k = 1:3, mo .... [TRUNCATED] 
1 : * * *
2 : * * *
3 : * * *

> rbind(cm2 = BIC(cm2), fcm2 = BIC(fcm2))
            1       2        3
cm2  21055.12 17776.3 17867.25
fcm2 21055.12 17776.3 17867.25

> fcm2b <- getModel(fcm2, which = "BIC")

> cbind(parameters(cm2b, which = "concomitant"), parameters(fcm2b, 
+     which = "concomitant"))
            1           2 1           2
(Intercept) 0  0.45759154 0  0.45759154
x1          0 -0.91231698 0 -0.91231698
x2          0  0.02909326 0  0.02909326

> parameters(fcm2b, which = "model")
                Comp.1     Comp.2
item.Item01  0.0000000  0.0000000
item.Item02  0.4458307 -0.5087512
item.Item03  0.8794596 -1.2541765
item.Item04  1.5175890 -1.7793843
item.Item05  2.3308845 -2.3289326
item.Item06  2.8255465 -2.9351253
item.Item07  3.5001225 -3.5059792
item.Item08  4.0926599 -4.0813289
item.Item09  4.6158654 -4.6979718
item.Item10  5.2655073 -5.2701331
score1       0.1008315  0.1638214
score2      -0.2485943 -0.1711337

 *** Run successfully completed ***
> proc.time()
   user  system elapsed 
349.864   1.756 352.685 
