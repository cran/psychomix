
> options(width = 70, prompt = "R> ", continue = "+  ", 
+     digits = 4)

> library("psychomix")
Loading required package: flexmix
Loading required package: lattice
Loading required package: psychotools

> library("lattice")

> data("VerbalAggression", package = "psychotools")

> suppressWarnings(RNGversion("3.5.0"))

> set.seed(1090)

> cache <- FALSE

> set.seed(1)

> r2 <- simRaschmix(design = "rost2")

> d <- data.frame(x1 = rbinom(nrow(r2), prob = c(0.4, 
+     0.6)[attr(r2, "cluster")], size = 1), x2 = rnorm(nrow(r2)))

> d$resp <- r2

> if (cache & file.exists("m1.rda")) {
+     load("m1.rda")
+ } else {
+     set.seed(2)
+     m1 <- raschmix(r2, k = 1:3)
+     m1
+     if (cache) { .... [TRUNCATED] 
1 : * * *
2 : * * *
3 : * * *

> m1

Call:
raschmix(formula = r2, k = 1:3)

  iter converged k k0 logLik   AIC   BIC   ICL
1    2      TRUE 1  1 -10484 21002 21094 21094
2    9      TRUE 2  2  -8829 17728 17917 17987
3  106      TRUE 3  3  -8813 17733 18019 18429

> plot(m1)

> BIC(m1)
    1     2     3 
21094 17917 18019 

> m1b <- getModel(m1, which = "BIC")

> summary(m1b)

Call:
raschmix(formula = r2, k = 2)

       prior size post>0 ratio
Comp.1   0.5  819   1285 0.637
Comp.2   0.5  830   1301 0.638

Item Parameters:
        Comp.1  Comp.2
Item01 -2.5461  2.6278
Item02 -2.1054  2.1251
Item03 -1.6716  1.3812
Item04 -1.0294  0.8535
Item05 -0.2233  0.3129
Item06  0.2738 -0.2937
Item07  0.9561 -0.8701
Item08  1.5512 -1.4464
Item09  2.0671 -2.0540
Item10  2.7276 -2.6362

'log Lik.' -8829 (df=35)
AIC: 17728   BIC: 17917 


> parameters(m1b, "item")
            Comp.1  Comp.2
item.Item01     NA      NA
item.Item02 0.4407 -0.5027
item.Item03 0.8745 -1.2466
item.Item04 1.5167 -1.7743
item.Item05 2.3228 -2.3149
item.Item06 2.8199 -2.9215
item.Item07 3.5023 -3.4979
item.Item08 4.0974 -4.0742
item.Item09 4.6132 -4.6818
item.Item10 5.2737 -5.2640

> worth(m1b)
        Comp.1  Comp.2
Item01 -2.5461  2.6278
Item02 -2.1054  2.1251
Item03 -1.6716  1.3812
Item04 -1.0294  0.8535
Item05 -0.2233  0.3129
Item06  0.2738 -0.2937
Item07  0.9561 -0.8701
Item08  1.5512 -1.4464
Item09  2.0671 -2.0540
Item10  2.7276 -2.6362

> attr(r2, "difficulty")
      [,1] [,2]
 [1,]  2.7 -2.7
 [2,]  2.1 -2.1
 [3,]  1.5 -1.5
 [4,]  0.9 -0.9
 [5,]  0.3 -0.3
 [6,] -0.3  0.3
 [7,] -0.9  0.9
 [8,] -1.5  1.5
 [9,] -2.1  2.1
[10,] -2.7  2.7

> table(model = clusters(m1b), true = attr(r2, "cluster"))
     true
model   1   2
    1  14 805
    2 812  18

> if (cache & file.exists("m2.rda")) {
+     load("m2.rda")
+ } else {
+     set.seed(3)
+     m2 <- raschmix(data = r2, k = 1:3, scores = "meanvar")
 .... [TRUNCATED] 
1 : * * *
2 : * * *
3 : * * *

> m2

Call:
raschmix(data = r2, k = 1:3, scores = "meanvar")

  iter converged k k0 logLik   AIC   BIC   ICL
1    2      TRUE 1  1 -10487 20996 21055 21055
2    9      TRUE 2  2  -8835 17716 17840 17910
3   70      TRUE 3  3  -8828 17725 17914 18467

> m2b <- getModel(m2, which = "BIC")

> par(mfrow = c(1, 2))

> plot(m1b, pos = "top")

> for (i in 1:2) lines(attr(r2, "difficulty")[, i], 
+     lty = 2, type = "b")

> plot(m2b, pos = "top")

> for (i in 1:2) lines(attr(r2, "difficulty")[, i], 
+     lty = 2, type = "b")

> logLik(m2b)
'log Lik.' -8835 (df=23)

> logLik(m1b)
'log Lik.' -8829 (df=35)

> parameters(m2b, which = "score")
                  Comp.1  Comp.2
score.location    0.1656  0.1001
score.dispersion -0.1681 -0.2514

> scoreProbs(m2b)
      Comp.1 Comp.2
 [1,] 0.0000 0.0000
 [2,] 0.1105 0.1170
 [3,] 0.1072 0.1102
 [4,] 0.1054 0.1058
 [5,] 0.1050 0.1037
 [6,] 0.1061 0.1037
 [7,] 0.1086 0.1058
 [8,] 0.1126 0.1101
 [9,] 0.1184 0.1170
[10,] 0.1262 0.1268
[11,] 0.0000 0.0000

> if (cache & file.exists("cm2.rda")) {
+     load("cm2.rda")
+ } else {
+     set.seed(4)
+     cm2 <- raschmix(resp ~ x1 + x2, data = d, k = 1:3, sc .... [TRUNCATED] 
1 : * * *
2 : * * *
3 : * * *

> rbind(m2 = BIC(m2), cm2 = BIC(cm2))
        1     2     3
m2  21055 17840 17914
cm2 21055 17776 17866

> cm2b <- getModel(cm2, which = "BIC")

> tStat <- 2 * (logLik(cm2b) - logLik(m2b))

> pValue <- pchisq(tStat, attr(logLik(cm2b), "df") - 
+     attr(logLik(m2b), "df"), lower.tail = FALSE)

> if (pValue < 0.001) pValue <- "< 0.001"

> cm2b <- getModel(cm2, which = "BIC")

> parameters(cm2b, which = "concomitant")
            1        2
(Intercept) 0 -0.45751
x1          0  0.91233
x2          0 -0.02908

> table(x1 = d$x1, clusters = clusters(cm2b))
   clusters
x1    1   2
  0 501 318
  1 325 505

> data("VerbalAggression", package = "psychotools")

> VerbalAggression$resp2 <- VerbalAggression$resp2[, 
+     1:12]

> va12 <- subset(VerbalAggression, rowSums(resp2) > 
+     0 & rowSums(resp2) < 12)

> colnames(va12$resp2)
 [1] "S1WantCurse" "S1DoCurse"   "S1WantScold" "S1DoScold"  
 [5] "S1WantShout" "S1DoShout"   "S2WantCurse" "S2DoCurse"  
 [9] "S2WantScold" "S2DoScold"   "S2WantShout" "S2DoShout"  

> if (cache & file.exists("va12_mix.rda")) {
+     load("va12_mix.rda")
+ } else {
+     set.seed(1)
+     va12_mix1 <- raschmix(resp2 ~ 1, data = va1 .... [TRUNCATED] 
1 : * * *
2 : * * *
3 : * * *
4 : * * *
1 : * * *
2 : * * *
3 : * * *
4 : * * *

> rbind(BIC(va12_mix1), BIC(va12_mix2))
        1    2    3    4
[1,] 3875 3858 3854 3890
[2,] 3875 3859 3855 3880

> va12_mix3 <- getModel(va12_mix2, which = "3")

> va12_mix1b <- getModel(va12_mix1, which = "3")

> va12_mix2b <- getModel(va12_mix2, which = "3")

> tStatVA <- 2 * (logLik(va12_mix2b) - logLik(va12_mix1b))

> pValueVA <- pchisq(tStatVA, attr(logLik(va12_mix2b), 
+     "df") - attr(logLik(va12_mix1b), "df"), lower.tail = FALSE)

> if (pValueVA < 0.001) pValueVA <- "< 0.001"

> trellis.par.set(theme = standard.theme(color = FALSE))

> print(histogram(va12_mix3))

> trellis.par.set(theme = standard.theme(color = FALSE))

> print(xyplot(va12_mix3))

> parameters(getModel(va12_mix2, which = "3"), which = "concomitant")
            1        2       3
(Intercept) 0 -0.76274 -3.6744
gendermale  0  1.66347  1.4157
anger       0  0.01141  0.1268

> if (cache & file.exists("fcm2.rda")) {
+     load("fcm2.rda")
+ } else {
+     set.seed(4)
+     fcm2 <- stepFlexmix(resp ~ 1, data = d, k = 1:3, mo .... [TRUNCATED] 
1 : * * *
2 : * * *
3 : * * *

> rbind(cm2 = BIC(cm2), fcm2 = BIC(fcm2))
         1     2     3
cm2  21055 17776 17866
fcm2 21055 17776 17866

> fcm2b <- getModel(fcm2, which = "BIC")

> cbind(parameters(cm2b, which = "concomitant"), parameters(fcm2b, 
+     which = "concomitant"))
            1        2 1        2
(Intercept) 0 -0.45751 0 -0.45751
x1          0  0.91233 0  0.91233
x2          0 -0.02908 0 -0.02908

> parameters(fcm2b, which = "model")
             Comp.1  Comp.2
item.Item01  0.0000  0.0000
item.Item02 -0.5088  0.4457
item.Item03 -1.2543  0.8792
item.Item04 -1.7796  1.5172
item.Item05 -2.3292  2.3304
item.Item06 -2.9355  2.8249
item.Item07 -3.5064  3.4994
item.Item08 -4.0819  4.0919
item.Item09 -4.6988  4.6150
item.Item10 -5.2711  5.2645
score1       0.1643  0.1007
score2      -0.1703 -0.2488

 *** Run successfully completed ***
> proc.time()
   user  system elapsed 
 87.204   0.263  87.501 
